[{"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\index.tsx":"1","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\reportWebVitals.ts":"2","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\App.tsx":"3","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\stories\\Task.stories.tsx":"4","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\components\\Task.tsx":"5","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\stories\\TaskList.stories.tsx":"6","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\components\\TaskList.tsx":"7","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\components\\InboxScreen.tsx":"8","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\stories\\InboxScreen.stories.tsx":"9","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\store\\taskSlice.tsx":"10","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\store\\TaskSlice.tsx":"11"},{"size":627,"mtime":1609836656652,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1606283917628,"results":"14","hashOfConfig":"13"},{"size":262,"mtime":1609702712009,"results":"15","hashOfConfig":"13"},{"size":805,"mtime":1609835971541,"results":"16","hashOfConfig":"13"},{"size":1364,"mtime":1609837041766,"results":"17","hashOfConfig":"13"},{"size":2352,"mtime":1609789433661,"results":"18","hashOfConfig":"13"},{"size":1736,"mtime":1609794434304,"results":"19","hashOfConfig":"13"},{"size":1070,"mtime":1609793928030,"results":"20","hashOfConfig":"13"},{"size":940,"mtime":1609838315675,"results":"21","hashOfConfig":"13"},{"size":1064,"mtime":1609836652246,"results":"22","hashOfConfig":"13"},{"size":1064,"mtime":1609836652246,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b9wx64",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\index.tsx",[],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\reportWebVitals.ts",[],["49","50"],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\App.tsx",[],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\stories\\Task.stories.tsx",["51"],"// src/components/Task.stories.js\r\n\r\nimport React from 'react';\r\nimport Task from '../components/Task';\r\nimport { Story } from '@storybook/react/types-6-0';\r\nimport {TasksProps} from \"../components/Task\"\r\n\r\nexport default {\r\n  component : Task,\r\n  title: 'Task',\r\n};\r\n\r\nconst Template:Story<TasksProps>  = (args) => <Task {...args} />\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  task: {\r\n    id: '1',\r\n    title: 'Test Task',\r\n    state: 'TASK_INBOX',\r\n    updatedAt: new Date(2018, 0, 1, 9, 0),\r\n  },\r\n};\r\n\r\nexport const Pinned = Template.bind({});\r\nPinned.args = {\r\n  task: {\r\n    ...Default.args.task,\r\n    state: 'TASK_PINNED',\r\n  },\r\n};\r\n\r\nexport const Archived = Template.bind({});\r\nArchived.args = {\r\n  task: {\r\n    ...Default.args.task,\r\n    state: 'TASK_ARCHIVED',\r\n  },\r\n};","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\components\\Task.tsx",[],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\stories\\TaskList.stories.tsx",["52"],"import React from 'react';\r\n\r\nimport {TaskList} from '../components/TaskList';\r\nimport * as TaskStories from './Task.stories';\r\nimport {TasksListProps} from \"../components/TaskList\" \r\nimport { Story } from '@storybook/react/types-6-0';\r\n\r\n\r\n\r\nexport default {\r\n  component: TaskList,\r\n  title: 'TaskList',\r\n  decorators: [(story: () => React.ReactNode) => <div style={{ padding: '3rem' }}>{story()}</div>],\r\n};\r\n\r\nconst Template:Story<TasksListProps> = args => <TaskList {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  // Shaping the stories through args composition.\r\n  // The data was inherited from the Default story in task.stories.js.\r\n  tasks: [\r\n    { ...TaskStories.Default.args?.task, id: '1', title: 'Task 1', state : \"TASK_INBOX\"  },\r\n    { ...TaskStories.Default.args?.task, id: '2', title: 'Task 2', state : \"TASK_INBOX\"  },\r\n    { ...TaskStories.Default.args?.task, id: '3', title: 'Task 3', state : \"TASK_INBOX\"  },\r\n    { ...TaskStories.Default.args?.task, id: '4', title: 'Task 4', state : \"TASK_INBOX\"  },\r\n    { ...TaskStories.Default.args?.task, id: '5', title: 'Task 5', state : \"TASK_INBOX\"  },\r\n    { ...TaskStories.Default.args?.task, id: '6', title: 'Task 6', state : \"TASK_INBOX\"  },\r\n  ], loading : (false)\r\n};\r\n\r\nexport const WithPinnedTasks = Template.bind({});\r\nWithPinnedTasks.args = {\r\n  // Shaping the stories through args composition.\r\n  // Inherited data coming from the Default story.\r\n  tasks: [\r\n    { ...TaskStories.Default.args?.task, id: '1', title: 'Task 1', state : \"TASK_INBOX\" },\r\n    { ...TaskStories.Default.args?.task, id: '2', title: 'Task 2', state : \"TASK_INBOX\"  },\r\n    { ...TaskStories.Default.args?.task, id: '3', title: 'Task 3', state : \"TASK_INBOX\"  },\r\n    { ...TaskStories.Default.args?.task, id: '4', title: 'Task 4', state : \"TASK_INBOX\"  },\r\n    { ...TaskStories.Default.args?.task, id: '5', title: 'Task 5 (pinned)', state: 'TASK_PINNED' },\r\n    { ...TaskStories.Default.args?.task, id: '6', title: 'Task 6 (pinned)', state: 'TASK_PINNED'} ,\r\n  ],\r\n};\r\n\r\nexport const Loading = Template.bind({});\r\nLoading.args = {\r\n  tasks: [],\r\n  loading: true,\r\n};\r\n\r\nexport const Empty = Template.bind({});\r\nEmpty.args = {\r\n  // Shaping the stories through args composition.\r\n  // Inherited data coming from the Loading story.\r\n  ...Loading.args,\r\n  loading: false,\r\n};","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\components\\TaskList.tsx",[],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\components\\InboxScreen.tsx",[],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\stories\\InboxScreen.stories.tsx",["53"],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\store\\taskSlice.tsx",[],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox\\src\\store\\TaskSlice.tsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":8,"column":1,"nodeType":"60","endLine":11,"endColumn":3},{"ruleId":"58","severity":1,"message":"59","line":10,"column":1,"nodeType":"60","endLine":14,"endColumn":3},{"ruleId":"58","severity":1,"message":"59","line":19,"column":1,"nodeType":"60","endLine":23,"endColumn":3},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]